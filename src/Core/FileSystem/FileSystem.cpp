#include "FileSystem.h"

#include "root_directory.h" // This is a configuration file generated by CMake.
#include "Common/dataStructs/String.h"

namespace Nx
{
	std::string FileSystem::GetPath(const std::string& path)
	{
		static std::string(*pathBuilder)(std::string const &) = GetPathBuilder();
		return (*pathBuilder)(path);
	}

	std::string const& FileSystem::GetRoot()
	{
		static char const * envRoot = getenv("PROJECT_ROOT_PATH");
		static char const * givenRoot = (envRoot != nullptr ? envRoot : PROJECT_ROOT_PATH);
		static std::string root = (givenRoot != nullptr ? givenRoot : "");
		return root;
	}

	Builder FileSystem::GetPathBuilder()
	{
		if (GetRoot() != "")
		{
			return &FileSystem::GetPathRelativeRoot;
		}
		else
		{
			return &FileSystem::GetPathRelativeBinary;
		}
	}

	std::string FileSystem::GetPathRelativeRoot(const std::string& path)
	{
		return GetRoot() + std::string("/") + path;
	}

	std::string FileSystem::GetPathRelativeBinary(const std::string& path)
	{
		return "../../../" + path;
	}
}
